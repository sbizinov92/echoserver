---
    name: GitOps Repository Update
    
    on:
      workflow_run:
        workflows: ["Continuous Delivery - Docker Image"]
        types:
          - completed
        branches:
          - main
        
      # Optional: Allow manual trigger
      workflow_dispatch:
        inputs:
          image_tag:
            description: 'Docker image tag to deploy (default: latest commit SHA)'
            required: false
    
    env:
      AWS_REGION: ${{ vars.AWS_REGION }}
      ECR_REPOSITORY: ${{ vars.ECR_REPOSITORY }}
      AWS_ACCOUNT_ID: ${{ vars.AWS_ACCOUNT_ID }}
      VALUES_FILE_PATH: charts/echoserver/values.yaml  # path to your Helm chart values file
    
    jobs:
      update-gitops:
        name: Update GitOps Repository
        runs-on: ubuntu-latest
        if: ${{ github.event.workflow_run.conclusion == 'success' || github.event_name == 'workflow_dispatch' }}
        
        steps:
          - name: Checkout current repository
            uses: actions/checkout@v4
            with:
              ref: ${{ github.ref }}
              token: ${{ secrets.GITHUB_TOKEN }}
          
          - name: Determine image tag
            id: determine-tag
            run: |
              if [[ "${{ github.event_name }}" == "workflow_dispatch" && -n "${{ github.event.inputs.image_tag }}" ]]; then
                echo "IMAGE_TAG=${{ github.event.inputs.image_tag }}" >> $GITHUB_OUTPUT
              else
                echo "IMAGE_TAG=${GITHUB_SHA::7}" >> $GITHUB_OUTPUT
              fi
          
          - name: Install yq
            uses: mikefarah/yq@master
          
          - name: Update image version in values.yaml
            run: |
              # Update the image tag in the values file
              yq -i '.image.tag = "${{ steps.determine-tag.outputs.IMAGE_TAG }}"' ${{ env.VALUES_FILE_PATH }}
              
              # Also update the full image reference if needed
              yq -i '.image.repository = "${{ env.AWS_ACCOUNT_ID }}.dkr.ecr.${{ env.AWS_REGION }}.amazonaws.com/${{ env.ECR_REPOSITORY }}"' ${{ env.VALUES_FILE_PATH }}
              
              # Show the changes
              echo "Updated values.yaml:"
              cat ${{ env.VALUES_FILE_PATH }}
              
              # Commit and push the changes
              git config --global user.name "GitHub Actions"
              git config --global user.email "actions@github.com"
              git add ${{ env.VALUES_FILE_PATH }}
              git commit -m "Update image to ${{ steps.determine-tag.outputs.IMAGE_TAG }}"
              git push origin HEAD:${{ github.ref }}
              
              echo "Successfully updated values.yaml with new image tag: ${{ steps.determine-tag.outputs.IMAGE_TAG }}"